// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package start

import (
	"context"

	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/origadmin/runtime/bootstrap"

	"origadmin/application/admin/internal/configs"
	"origadmin/application/admin/internal/loader"
	"origadmin/application/admin/internal/mods/system/server"
)

// Injectors from wire.go:

// buildInjectors init kratos application.
func buildInjectors(contextContext context.Context, arg *loader.Config, configsBootstrap *configs.Bootstrap, logger log.Logger) (*kratos.App, func(), error) {
	v, err := bootstrap.NewDiscoveries(configsBootstrap)
	if err != nil {
		return nil, nil, err
	}
	server := server.NewGINSServer(configsBootstrap, logger)
	httpServer := server.NewHTTPServer(configsBootstrap, logger)
	injectorClient := &bootstrap.InjectorClient{
		Config:      arg,
		Bootstrap:   configsBootstrap,
		Discoveries: v,
		Logger:      logger,
		ServerGINS:  server,
		ServerHTTP:  httpServer,
	}
	app := NewApp(contextContext, injectorClient)
	return app, func() {
	}, nil
}
