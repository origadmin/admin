syntax = "proto3";

package api.v1.services.common;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "pwt/v1/token.proto";
import "buf/validate/validate.proto";

option go_package = "v1/services/common;common";
option java_multiple_files = true;
option java_package = "com.origadmin.api.v1.services.common";
option java_outer_classname = "APIV1ServicesSystemProto";

// The login service definition.
service LoginAPI {
    rpc CaptchaID (CaptchaIDRequest) returns (CaptchaIDResponse) {
        option (google.api.http) = {
            get: "/api/v1/captcha/id",
        };
    }
    rpc CaptchaImage (CaptchaImageRequest) returns (CaptchaImageResponse) {
        option (google.api.http) = {
            get: "/api/v1/captcha/image",
            response_body: "*",
        };
    }
    rpc Login (LoginRequest) returns (LoginResponse) {
        option (google.api.http) = {
            post: "/api/v1/login",
            body: "data",
        };
    }
    rpc Logout (LogoutRequest) returns (LogoutResponse) {
        option (google.api.http) = {
            post: "/api/v1/current/logout",
            body: "data",
        };
    }
    rpc CurrentUser (CurrentUserRequest) returns (CurrentUserResponse) {
        option (google.api.http) = {
            post: "/api/v1/current/user",
            body: "data",
        };
    }
    rpc CurrentMenus (CurrentMenusRequest) returns (CurrentMenusResponse) {
        option (google.api.http) = {
            get: "/api/v1/current/menus",
        };
    }
}

message LoginRequest {
    message Data {
        string username = 1 [json_name = "username", (buf.validate.field).required = true];
        string password = 2 [json_name = "password", (buf.validate.field).required = true];
        string captcha_id = 3 [json_name = "captcha_id", (buf.validate.field).required = true];
        string captcha_code = 4 [json_name = "captcha_code", (buf.validate.field).required = true];
    }
    Data data = 2 [json_name = "data"];
}

message LoginResponse {
    pwt.v1.Token token = 1;
}

message LogoutRequest {
    google.protobuf.Any data = 2 [json_name = "data"];
}

message LogoutResponse {
    bool success = 1;
}

message CurrentUserRequest {
    google.protobuf.Any data = 2 [json_name = "data"];
}

message CurrentUserResponse {
    bool success = 1;
}

message CaptchaIDRequest {
    // The timestamp of the request prevent caching of the same result
    string ts = 1 [json_name = "ts"];
}

message CaptchaIDResponse {
    string data = 1;
}

// The request message containing the user's name.
message CaptchaImageRequest {
    string id = 1 [json_name = "id"];
    string reload = 2 [json_name = "reload"];
    google.protobuf.Any data = 3 [json_name = "data"];
}

message CaptchaData {
    string captcha_id = 1;
    string captcha_img = 2;
}

// The response message containing the greetings
message CaptchaImageResponse {
    map<string, string> headers = 1;
    bytes image = 2[json_name = "image"];
}


message CurrentMenusRequest {
    google.protobuf.Any data = 2 [json_name = "data"];
}
message CurrentMenusResponse {
    bool success = 1;
}
