syntax = "proto3";

package api.v1.services.system;

import "google/protobuf/timestamp.proto";

option go_package = "v1/services/system;system";
option java_multiple_files = true;
option java_outer_classname = "APIServiceSystemTypeProto";
option java_package = "com.origadmin.api.v1.services.system";
option objc_class_prefix = "APIServiceSystemType";

// Menu is the model entity for the Menu schema.
message Menu {
  // ID of the ent.
  int64 id = 1 [json_name = "id"];
  // CreateTime holds the value of the "create_time" field.
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // UpdateTime holds the value of the "update_time" field.
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // Code holds the value of the "keyword" field.
  string keyword = 4 [json_name = "keyword"];
  // Name holds the value of the "name" field.
  string name = 5 [json_name = "name"];
  // I18nKey holds the value
  string i18n_key = 6 [json_name = "i18n_key"];
  // Description holds the value of the "description" field.
  string description = 7 [json_name = "description"];
  // Sequence holds the value of the "sequence" field.
  int32 sequence = 8 [json_name = "sequence"];
  // Type holds the value of the "type" field.
  string type = 9 [json_name = "type"];
  // Icon holds the value of the "icon" field.
  string icon = 10 [json_name = "icon"];
  // Path holds the value of the "path" field.
  string path = 11 [json_name = "path"];
  // Properties holds the value of the "properties" field.
  string properties = 12 [json_name = "properties"];
  // Status holds the value of the "status" field.
  int32 status = 13 [json_name = "status"];
  // ParentID holds the value of the "parent_id" field.
  int64 parent_id = 14 [json_name = "parent_id"];
  // ParentPath holds the value of the "parent_path" field.
  string parent_path = 15 [json_name = "parent_path"];
  // Children holds the value of the children edge.
  repeated Menu children = 21 [json_name = "children"];
  // Parent holds the value of the parent edge.
  Menu parent = 22 [json_name = "parent"];
  // Resources holds the value of the resources edge.
  repeated Resource resources = 23 [json_name = "resources"];
  // Roles holds the value of the roles edge.
  repeated Role roles = 24 [json_name = "roles"];
}

// MenuEdges holds the relations/edges for other nodes in the graph.
message MenuEdges {
  // Children holds the value of the children edge.
  repeated Menu children = 1 [json_name = "children"];
  // Parent holds the value of the parent edge.
  Menu parent = 2 [json_name = "parent"];
  // Resources holds the value of the resources edge.
  repeated Resource resources = 3 [json_name = "resources"];
  // Roles holds the value of the roles edge.
  repeated Role roles = 4 [json_name = "roles"];
  // RoleMenu holds the value of the role_menu edge.
  repeated RoleMenu role_menus = 5 [json_name = "role_menus"];
}

// Role is the model entity for the Role schema.
message Role {
  // ID of the ent.
   // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // create_time.field.comment
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // update_time.field.comment
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // role.field.keyword
  string keyword = 4 [json_name = "keyword"];
  // role.field.name
  string name = 5 [json_name = "name"];
  // role.field.description
  string description = 6 [json_name = "description"];
  // role.field.type
  int32 type = 7 [json_name = "type"];
  // role.field.sequence
  int32 sequence = 8 [json_name = "sequence"];
  // role.field.status
  int32 status = 9 [json_name = "status"];
  // role.field.is_system
  bool is_system = 10 [json_name = "is_system"];
  // Menus holds the value of the menus edge.
  repeated Menu menus = 21 [json_name = "menus"];
  // Users holds the value of the users edge.
  repeated User users = 22 [json_name = "users"];
}

// RoleEdges holds the relations/edges for other nodes in the graph.
message RoleEdges {
  // Menus holds the value of the menus edge.
  repeated Menu menus = 1 [json_name = "menus"];
  // Users holds the value of the users edge.
  repeated User users = 2 [json_name = "users"];
  // RoleMenu holds the value of the role_menu edge.
  repeated RoleMenu role_menus = 3 [json_name = "role_menus"];
  // UserRole holds the value of the user_role edge.
  repeated UserRole user_roles = 4 [json_name = "user_roles"];
}

// User is the model entity for the User schema.
message User {
  // ID of the ent.
   // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // create_author.field.comment
  int64 create_author = 2 [json_name = "create_author"];
  // update_author.field.comment
  int64 update_author = 3 [json_name = "update_author"];
  // create_time.field.comment
  google.protobuf.Timestamp create_time = 4 [json_name = "create_time"];
  // update_time.field.comment
  google.protobuf.Timestamp update_time = 5 [json_name = "update_time"];
  // user.field.uuid
  string uuid = 6 [json_name = "uuid"];
  // user.field.allowed_ip
  string allowed_ip = 7 [json_name = "allowed_ip"];
  // user.field.username
  string username = 8 [json_name = "username"];
  // user.field.nickname
  string nickname = 9 [json_name = "nickname"];
  // user.field.avatar
  string avatar = 10 [json_name = "avatar"];
  // user.field.nickname
  string name = 11 [json_name = "name"];
  // user.field.gender
  string gender = 12 [json_name = "gender"];
  // user.field.password
  // @Decrypted don't show this field in response
  string password = 13 [json_name = "password"];
  // user.field.salt
  // @Decrypted don't show this field in response
  string salt = 14 [json_name = "salt"];
  // user.field.phone
  string phone = 15 [json_name = "phone"];
  // user.field.email
  string email = 16 [json_name = "email"];
  // user.field.remark
  string remark = 17 [json_name = "remark"];
  // user.field.token
  string token = 18 [json_name = "token"];
  // user.field.status
  int32 status = 19 [json_name = "status"];
  // user.field.last_login_ip
  string last_login_ip = 20 [json_name = "last_login_ip"];
  // user.field.last_login_time
  google.protobuf.Timestamp last_login_time = 21 [json_name = "last_login_time"];
  // user.field.sanction_date
  google.protobuf.Timestamp sanction_date = 22 [json_name = "sanction_date"];
  // user.field.manager_id
  int64 manager_id = 23 [json_name = "manager_id"];
  // user.field.manager
  string manager = 24 [json_name = "manager"];
}

// UserEdges holds the relations/edges for other nodes in the graph.
message UserEdges {
  // Roles holds the value of the roles edge.
  repeated Role roles = 1 [json_name = "roles"];
  // UserRole holds the value of the user_role edge.
  repeated UserRole user_roles = 2 [json_name = "user_roles"];
}

// UserRole is the model entity for the UserRole schema.
message UserRole {
  // ID of the ent.
  int64 id = 1 [json_name = "id"];
  // CreateTime holds the value of the "create_time" field.
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // UpdateTime holds the value of the "update_time" field.
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // UserID holds the value of the "user_id" field.
  int64 user_id = 4 [json_name = "user_id"];
  // RoleID holds the value of the "role_id" field.
  int64 role_id = 5 [json_name = "role_id"];
  // RoleName holds the value of the "role_name" field.
  string role_name = 6 [json_name = "role_name"];
  // User holds the value of the user edge.
  User user = 21 [json_name = "user"];
  // Role holds the value of the role edge.
  Role role = 22 [json_name = "role"];
}

// UserRoleEdges holds the relations/edges for other nodes in the graph.
message UserRoleEdges {
  // User holds the value of the user edge.
  User user = 1 [json_name = "user"];
  // Role holds the value of the role edge.
  Role role = 2 [json_name = "role"];
}

// RoleMenu is the model entity for the RoleMenu schema.
message RoleMenu {
  // ID of the ent.
  int64 id = 1 [json_name = "id"];
  // CreateTime holds the value of the "create_time" field.
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // UpdateTime holds the value of the "update_time" field.
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // RoleID holds the value of the "role_id" field.
  int64 role_id = 4 [json_name = "role_id"];
  // MenuID holds the value of the "menu_id" field.
  int64 menu_id = 5 [json_name = "menu_id"];
  // Role holds the value of the role edge.
  Role role = 21 [json_name = "role"];
  // Menu holds the value of the menu edge.
  Menu menu = 22 [json_name = "menu"];
}

// RoleMenuEdges holds the relations/edges for other nodes in the graph.
message RoleMenuEdges {
  // Role holds the value of the role edge.
  Role role = 1 [json_name = "role"];
  // Menu holds the value of the menu edge.
  Menu menu = 2 [json_name = "menu"];
}

// Resource is the model entity for the Resource schema.
message Resource {
  // ID of the ent.
 // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // create_time.field.comment
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // update_time.field.comment
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // resource.field.name
  string name = 4 [json_name = "name"];
  // resource.field.keyword
  string keyword = 5 [json_name = "keyword"];
  // resource.field.i18n_key
  string i18n_key = 6 [json_name = "i18n_key"];
  // resource.field.type
  string type = 7 [json_name = "type"];
  // resource.field.status
  int32 status = 8 [json_name = "status"];
  // resource.field.uri
  string uri = 9 [json_name = "uri"];
  // resource.field.operation
  string operation = 10 [json_name = "operation"];
  // resource.field.method
  string method = 11 [json_name = "method"];
  // resource.field.component
  string component = 12 [json_name = "component"];
  // resource.field.icon
  string icon = 13 [json_name = "icon"];
  // resource.field.sequence
  int32 sequence = 14 [json_name = "sequence"];
  // resource.field.visible
  bool visible = 15 [json_name = "visible"];
  // resource.field.tree_path
  string tree_path = 16 [json_name = "tree_path"];
  // resource.field.properties
  map<string, string > properties = 17 [json_name = "properties"];
  // resource.field.description
  string description = 18 [json_name = "description"];
  // resource.field.parent_id
  int64 parent_id = 19 [json_name = "parent_id"];
  // Children holds the value of the children edge.
  repeated Resource children = 21 [json_name = "children"];
  // Parent holds the value of the parent edge.
  Resource parent = 22 [json_name = "parent"];
}

// ResourceEdges holds the relations/edges for other nodes in the graph.
message ResourceEdges {
  // Menu holds the value of the menu edge.
  Menu menu = 1 [json_name = "menu"];
}


// department.table.comment
message Department {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // create_time.field.comment
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // update_time.field.comment
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // department.field.keyword
  string keyword = 4 [json_name = "keyword"];
  // department.field.name
  string name = 5 [json_name = "name"];
  // menu.field.tree_path
  string tree_path = 6 [json_name = "tree_path"];
  // department.field.sequence
  int32 sequence = 7 [json_name = "sequence"];
  // department.field.status
  int32 status = 8 [json_name = "status"];
  // department.field.level
  int32 level = 9 [json_name = "level"];
  // department.field.description
  string description = 10 [json_name = "description"];
  // department.field.parent_id
  int64 parent_id = 11 [json_name = "parent_id"];
  // Children holds the value of the children edge.
  repeated Department children = 12 [json_name = "children"];
  // Parent holds the value of the parent edge.
  Department parent = 13 [json_name = "parent"];
}

message DepartmentEdges {
  // Users holds the value of the users edge.
  repeated User users = 1 [json_name = "users"];
  // Positions holds the value of the positions edge.
  repeated Position positions = 2 [json_name = "positions"];
  // Children holds the value of the children edge.
  repeated Department children = 3 [json_name = "children"];
  // Parent holds the value of the parent edge.
  Department parent = 4 [json_name = "parent"];
  // UserDepartments holds the value of the user_departments edge.
  repeated UserDepartment user_departments = 5 [json_name = "user_departments"];
}

// user_department.table.comment
message UserDepartment {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // field.foreign_key.comment
  int64 user_id = 2 [json_name = "user_id"];
  // field.foreign_key.comment
  int64 department_id = 3 [json_name = "department_id"];
  // Edges holds the relations/edges for other nodes in the graph.
  // The values are being populated by the UserDepartmentQuery when eager-loading is set.
  UserDepartmentEdges edges = 4 [json_name = "edges"];
}

// UserDepartmentEdges holds the relations/edges for other nodes in the graph.
message UserDepartmentEdges {
  // User holds the value of the user edge.
  User user = 1 [json_name = "user"];
  // Department holds the value of the department edge.
  Department department = 2 [json_name = "department"];
}

// position.table.comment
message Position {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // create_time.field.comment
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // update_time.field.comment
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // position.field.name
  string name = 4 [json_name = "name"];
  // position.field.keyword
  string keyword = 5 [json_name = "keyword"];
  // position.field.description
  string description = 6 [json_name = "description"];
  // department.field.department_id
  int64 department_id = 7 [json_name = "department_id"];
}

// PositionEdges holds the relations/edges for other nodes in the graph.
message PositionEdges {
  // Department holds the value of the department edge.
  Department department = 1 [json_name = "department"];
  // Users holds the value of the users edge.
  repeated User users = 2 [json_name = "users"];
  // Permissions holds the value of the permissions edge.
  repeated Permission permissions = 3 [json_name = "permissions"];
  // UserPositions holds the value of the user_positions edge.
  repeated UserPosition user_positions = 4 [json_name = "user_positions"];
  // PositionPermissions holds the value of the position_permissions edge.
  repeated PositionPermission position_permissions = 5 [json_name = "position_permissions"];
}

// permission.table.comment
message Permission {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // create_time.field.comment
  google.protobuf.Timestamp create_time = 2 [json_name = "create_time"];
  // update_time.field.comment
  google.protobuf.Timestamp update_time = 3 [json_name = "update_time"];
  // permission.field.name
  string name = 4 [json_name = "name"];
  // permission.field.keyword
  string keyword = 5 [json_name = "keyword"];
  // permission.field.description
  string description = 6 [json_name = "description"];
  // permission.field.data_scope
  string data_scope = 7 [json_name = "data_scope"];
  // permission.field.data_rules
  map<string, string > data_rules = 8 [json_name = "data_rules"];

}

// PermissionEdges holds the relations/edges for other nodes in the graph.
message PermissionEdges {
  // Roles holds the value of the roles edge.
  repeated Role roles = 1 [json_name = "roles"];
  // Resources holds the value of the resources edge.
  repeated Resource resources = 2 [json_name = "resources"];
  // Positions holds the value of the positions edge.
  repeated Position positions = 3 [json_name = "positions"];
  // RolePermissions holds the value of the role_permissions edge.
  repeated RolePermission role_permissions = 4 [json_name = "role_permissions"];
  // PermissionResources holds the value of the permission_resources edge.
  repeated PermissionResource permission_resources = 5 [json_name = "permission_resources"];
  // PositionPermissions holds the value of the position_permissions edge.
  repeated PositionPermission position_permissions = 6 [json_name = "position_permissions"];
}

// user_position.table.comment
message UserPosition {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // field.foreign_key.comment
  int64 user_id = 2 [json_name = "user_id"];
  // field.foreign_key.comment
  int64 position_id = 3 [json_name = "position_id"];

}

// UserPositionEdges holds the relations/edges for other nodes in the graph.
message UserPositionEdges {
  // User holds the value of the user edge.
  User user = 1 [json_name = "user"];
  // Position holds the value of the position edge.
  Position position = 2 [json_name = "position"];
}

// position_permission.table.comment
message PositionPermission {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // position_permission.field.position_id
  int64 position_id = 2 [json_name = "position_id"];
  // position_permission.field.permission_id
  int64 permission_id = 3 [json_name = "permission_id"];

}

// PositionPermissionEdges holds the relations/edges for other nodes in the graph.
message PositionPermissionEdges {
  // Position holds the value of the position edge.
  Position position = 1 [json_name = "position"];
  // Permission holds the value of the permission edge.
  Permission permission = 2 [json_name = "permission"];
}

// role_permission.table.comment
message RolePermission {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // field.foreign_key.comment
  int64 role_id = 2 [json_name = "role_id"];
  // field.foreign_key.comment
  int64 permission_id = 3 [json_name = "permission_id"];

}

// RolePermissionEdges holds the relations/edges for other nodes in the graph.
message RolePermissionEdges {
  // Role holds the value of the role edge.
  Role role = 1 [json_name = "role"];
  // Permission holds the value of the permission edge.
  Permission permission = 2 [json_name = "permission"];
}

// permission_resource.table.comment
message PermissionResource {
  // ID of the ent.
  // field.primary_key.comment
  int64 id = 1 [json_name = "id"];
  // field.foreign_key.comment
  int64 permission_id = 2 [json_name = "permission_id"];
  // field.foreign_key.comment
  int64 resource_id = 3 [json_name = "resource_id"];
  // permission_resource.field.actions
  string actions = 4 [json_name = "actions"];
}

// PermissionResourceEdges holds the relations/edges for other nodes in the graph.
message PermissionResourceEdges {
  // Permission holds the value of the permission edge.
  Permission permission = 1 [json_name = "permission"];
  // Resource holds the value of the resource edge.
  Resource resource = 2 [json_name = "resource"];
}
