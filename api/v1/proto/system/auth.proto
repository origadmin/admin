syntax = "proto3";

package api.v1.services.system;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "system/types.proto";

option go_package = "v1/services/system;system";
option java_multiple_files = true;
option java_outer_classname = "APIServiceSystemAuthProto";
option java_package = "com.origadmin.api.v1.services.system";
option objc_class_prefix = "APIServiceSystemAuth";

service AuthService {
  rpc ListAuthResources (ListAuthResourcesRequest) returns (ListAuthResourcesResponse) {
    option (google.api.http) = {get: "/sys/auth/resources"};
  }
  // CreateToken generates a new JWT token for the given user.
  rpc CreateToken (CreateTokenRequest) returns (CreateTokenResponse) {
    option (google.api.http) = {
      post: "/sys/auth/token"
      body: "data"
    };
  }

  // ValidateToken verifies the validity of a JWT token.
  rpc ValidateToken (ValidateTokenRequest) returns (ValidateTokenResponse) {
    option (google.api.http) = {get: "/sys/auth/validate"};
  }

  // DestroyToken invalidates a JWT token.
  rpc DestroyToken (DestroyTokenRequest) returns (DestroyTokenResponse) {
    option (google.api.http) = {
      post: "/sys/auth/destroy"
      body: "data"
    };
  }

  rpc Authenticate (AuthenticateRequest) returns (AuthenticateResponse) {
    option (google.api.http) = {
      post: "/sys/auth/authenticate"
      body: "data"
    };
  }

  rpc AuthLogout (AuthLogoutRequest) returns (AuthLogoutResponse) {
    option (google.api.http) = {
      post: "/sys/auth/logout"
      body: "data"
    };
  }
}

message AuthLogoutRequest {
  message Data {
    string token = 1 [json_name = "token"];
  }
  Data data = 1 [json_name = "data"];
}

message AuthLogoutResponse {
  google.protobuf.Empty empty = 1;
}

message ListAuthResourcesRequest {
  // The maximum number of Auths to return.
  int32 page_size = 1 [json_name = "page_size"];
  // The next_page_token value returned from a previous List request, if any.
  string page_token = 2 [json_name = "page_token"];
  // The current page number.
  int32 current = 3 [json_name = "current"];
  // The no_paging is used to disable pagination.
  bool no_paging = 4 [json_name = "no_paging"];
}

message ListAuthResourcesResponse {
  // The list of Auths.
  repeated Resource resources = 1 [json_name = "resources"];
  // The total number of Auths in the result set.
  int32 total_size = 2 [json_name = "total_size"];
}

// CreateTokenRequest contains the information needed to create a token.
message CreateTokenRequest {
  message Data {
    string user_id = 1 [json_name = "user_id"];
    repeated string scopes = 2 [json_name = "scopes"];
  }
  Data data = 1 [json_name = "data"];
}

// CreateTokenResponse contains the generated token.
message CreateTokenResponse {
  string token = 1 [json_name = "token"];
}

// VerifyTokenRequest contains the token to be verified.
message ValidateTokenRequest {
  string token = 1 [json_name = "token"];
}

// VerifyTokenResponse contains the result of the verification.
message ValidateTokenResponse {
  bool is_valid = 1 [json_name = "is_valid"];
  map<string, string> claims = 2 [json_name = "claims"];
}

// DestroyTokenRequest contains the token to be invalidated.
message DestroyTokenRequest {
  message Data {
    string token = 1 [json_name = "token"];
  }
  Data data = 1 [json_name = "data"];
}

// DestroyTokenResponse contains the result of the invalidation.
message DestroyTokenResponse {
  google.protobuf.Empty empty = 1;
}

message AuthenticateRequest {
  message Data {
    string token = 1 [json_name = "token"];
    string path = 3 [json_name = "path"];
    string method = 4 [json_name = "method"];
    string operation = 5 [json_name = "operation"];
  }
  Data data = 1 [json_name = "data"];
}

message AuthenticateResponse {
  bool is_valid = 1 [json_name = "is_valid"];
}
