syntax = "proto3";

package api.v1.services.system;

import "google/api/annotations.proto";
import "google/protobuf/any.proto";
import "google/protobuf/empty.proto";
import "system/types.proto";

option go_package = "v1/services/system;system";
option java_multiple_files = true;
option java_package = "com.origadmin.api.v1.services.system";
option java_outer_classname = "APIServiceSystemMenuProto";
option objc_class_prefix = "APIServiceSystemMenu";

// The menu service definition.
service MenuAPI {
  rpc ListMenus (ListMenusRequest) returns (ListMenusResponse) {
    option (google.api.http) = {
      get: "/api/v1/sys/menus",
    };
  }
  rpc GetMenu (GetMenuRequest) returns (GetMenuResponse) {
    option (google.api.http) = {
      get: "/api/v1/sys/menus/{id}",
    };
  }
  rpc CreateMenu (CreateMenuRequest) returns (CreateMenuResponse) {
    option (google.api.http) = {
      post: "/api/v1/sys/menus",
      body: "menu",
    };
  }
  rpc UpdateMenu (UpdateMenuRequest) returns (UpdateMenuResponse) {
    option (google.api.http) = {
      put: "/api/v1/sys/menus/{menu.id}",
      body: "menu",
    };
  }
  rpc DeleteMenu (DeleteMenuRequest) returns (DeleteMenuResponse) {
    option (google.api.http) = {
      delete: "/api/v1/sys/menus/{id}",
    };
  }
}

// ListMenusRequest is the request for the MenuService.ListMenus method.
message ListMenusRequest {
  // The parent resource id, for example, "shelves/shelf1".
  string id = 1;
  // The current page number.
  int32 current = 2;
  // The maximum number of items to return.
  int32 page_size = 3;
  // The next_page_token value returned from a previous List request, if any.
  string page_token = 4;
  // The no_paging is used to disable pagination.
  bool no_paging = 5;
  // The only_count is the query parameter for set only to query the total number
  bool only_count = 6;
}

// ListMenusResponse is the response for the MenuService.ListMenus method.
message ListMenusResponse {
  // The total number of items in the list.
  int32 total_size = 1 [
    json_name = "total_size"
  ];
  // The paging menus
  repeated api.v1.services.system.Menu menus = 2 [
    json_name = "menus"
  ];
  // The current page number.
  int32 current = 3 [
    json_name = "current"
  ];
  // The maximum number of items to return.
  int32 page_size = 4 [
    json_name = "page_size"
  ];
  // Token to retrieve the next page of results, or empty if there are no
  // more results in the list.
  string next_page_token = 5 [
    json_name = "next_page_token"
  ];
  // Additional information about this response.
  // content to be added without destroying the current data format
  optional google.protobuf.Any extra = 6 [
    json_name = "extra"
  ];
}

// GetMenuRequest is the request for the MenuService.GetMenu method.
message GetMenuRequest {
  // The field will contain id of the resource requested, for example:
  // "shelves/shelf1/menus/menu2"
  string id = 1;
}

// GetMenuResponse is the response for the MenuService.GetMenu method.
message GetMenuResponse {
  // The field id should match the Noun in the method id.
  api.v1.services.system.Menu menu = 1;
}

// CreateMenuRequest is the request for the MenuService.CreateMenu method.
message CreateMenuRequest {
  // The parent resource id where the menu is to be created.
  string parent = 1;

  // The menu id to use for this menu.
  string menu_id = 3;

  // The menu resource to create.
  // The field id should match the Noun in the method id.
  api.v1.services.system.Menu menu = 2;
}

// CreateMenuResponse is the response for the MenuService.CreateMenu method.
message CreateMenuResponse {
  api.v1.services.system.Menu menu = 1;
}

// UpdateMenuRequest is the request for the MenuService.UpdateMenu method.
message UpdateMenuRequest {
  // The menu resource which replaces the resource on the server.
  api.v1.services.system.Menu menu = 1;

}

// UpdateMenuResponse is the response for the MenuService.UpdateMenu method.
message UpdateMenuResponse {
  api.v1.services.system.Menu menu = 1;
}

// DeleteMenuRequest is the request for the MenuService.DeleteMenu method.
message DeleteMenuRequest {
  // The resource id of the menu to be deleted, for example:
  // "shelves/shelf1/menus/menu2"
  string id = 1;
}

// DeleteMenuResponse is the response for the MenuService.DeleteMenu method.
message DeleteMenuResponse {
  // or api.v1.services.system.Menu menu = 1; or google.protobuf.Empty empty = 1;
  google.protobuf.Empty empty = 1;
}