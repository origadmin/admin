// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: system/error.proto

package system

import (
	_ "github.com/go-kratos/kratos/v2/errors"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SystemErrorReason int32

const (
	SystemErrorReason_SYSTEM_ERROR_REASON_UNSPECIFIED            SystemErrorReason = 0
	SystemErrorReason_SYSTEM_ERROR_REASON_USER_NOT_FOUND         SystemErrorReason = 2001
	SystemErrorReason_SYSTEM_ERROR_REASON_USER_ALREADY_EXISTS    SystemErrorReason = 2002
	SystemErrorReason_SYSTEM_ERROR_REASON_USER_NOT_LOGGED_IN     SystemErrorReason = 2003
	SystemErrorReason_SYSTEM_ERROR_REASON_USER_NOT_LOGGED_OUT    SystemErrorReason = 2004
	SystemErrorReason_SYSTEM_ERROR_REASON_TOKEN_EXPIRED          SystemErrorReason = 2005
	SystemErrorReason_SYSTEM_ERROR_REASON_TOKEN_NOT_FOUND        SystemErrorReason = 2006
	SystemErrorReason_SYSTEM_ERROR_REASON_INVALID_TOKEN          SystemErrorReason = 2007
	SystemErrorReason_SYSTEM_ERROR_REASON_INVALID_CLAIMS         SystemErrorReason = 2008
	SystemErrorReason_SYSTEM_ERROR_REASON_INVALID_AUTHENTICATION SystemErrorReason = 2009
	SystemErrorReason_SYSTEM_ERROR_REASON_INVALID_AUTHORIZATION  SystemErrorReason = 2010
	SystemErrorReason_SYSTEM_ERROR_REASON_INVALID_REQUEST        SystemErrorReason = 2011
	SystemErrorReason_SYSTEM_ERROR_REASON_INVALID_RESPONSE       SystemErrorReason = 2012
	SystemErrorReason_SYSTEM_ERROR_REASON_INVALID_SERVER         SystemErrorReason = 2013
)

// Enum value maps for SystemErrorReason.
var (
	SystemErrorReason_name = map[int32]string{
		0:    "SYSTEM_ERROR_REASON_UNSPECIFIED",
		2001: "SYSTEM_ERROR_REASON_USER_NOT_FOUND",
		2002: "SYSTEM_ERROR_REASON_USER_ALREADY_EXISTS",
		2003: "SYSTEM_ERROR_REASON_USER_NOT_LOGGED_IN",
		2004: "SYSTEM_ERROR_REASON_USER_NOT_LOGGED_OUT",
		2005: "SYSTEM_ERROR_REASON_TOKEN_EXPIRED",
		2006: "SYSTEM_ERROR_REASON_TOKEN_NOT_FOUND",
		2007: "SYSTEM_ERROR_REASON_INVALID_TOKEN",
		2008: "SYSTEM_ERROR_REASON_INVALID_CLAIMS",
		2009: "SYSTEM_ERROR_REASON_INVALID_AUTHENTICATION",
		2010: "SYSTEM_ERROR_REASON_INVALID_AUTHORIZATION",
		2011: "SYSTEM_ERROR_REASON_INVALID_REQUEST",
		2012: "SYSTEM_ERROR_REASON_INVALID_RESPONSE",
		2013: "SYSTEM_ERROR_REASON_INVALID_SERVER",
	}
	SystemErrorReason_value = map[string]int32{
		"SYSTEM_ERROR_REASON_UNSPECIFIED":            0,
		"SYSTEM_ERROR_REASON_USER_NOT_FOUND":         2001,
		"SYSTEM_ERROR_REASON_USER_ALREADY_EXISTS":    2002,
		"SYSTEM_ERROR_REASON_USER_NOT_LOGGED_IN":     2003,
		"SYSTEM_ERROR_REASON_USER_NOT_LOGGED_OUT":    2004,
		"SYSTEM_ERROR_REASON_TOKEN_EXPIRED":          2005,
		"SYSTEM_ERROR_REASON_TOKEN_NOT_FOUND":        2006,
		"SYSTEM_ERROR_REASON_INVALID_TOKEN":          2007,
		"SYSTEM_ERROR_REASON_INVALID_CLAIMS":         2008,
		"SYSTEM_ERROR_REASON_INVALID_AUTHENTICATION": 2009,
		"SYSTEM_ERROR_REASON_INVALID_AUTHORIZATION":  2010,
		"SYSTEM_ERROR_REASON_INVALID_REQUEST":        2011,
		"SYSTEM_ERROR_REASON_INVALID_RESPONSE":       2012,
		"SYSTEM_ERROR_REASON_INVALID_SERVER":         2013,
	}
)

func (x SystemErrorReason) Enum() *SystemErrorReason {
	p := new(SystemErrorReason)
	*p = x
	return p
}

func (x SystemErrorReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SystemErrorReason) Descriptor() protoreflect.EnumDescriptor {
	return file_system_error_proto_enumTypes[0].Descriptor()
}

func (SystemErrorReason) Type() protoreflect.EnumType {
	return &file_system_error_proto_enumTypes[0]
}

func (x SystemErrorReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SystemErrorReason.Descriptor instead.
func (SystemErrorReason) EnumDescriptor() ([]byte, []int) {
	return file_system_error_proto_rawDescGZIP(), []int{0}
}

var File_system_error_proto protoreflect.FileDescriptor

var file_system_error_proto_rawDesc = []byte{
	0x0a, 0x12, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x1a, 0x13, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x73, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2a, 0xc0, 0x05, 0x0a, 0x11, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x1f, 0x53, 0x59, 0x53, 0x54, 0x45,
	0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x2d, 0x0a, 0x22,
	0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41,
	0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55,
	0x4e, 0x44, 0x10, 0xd1, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0x94, 0x03, 0x12, 0x32, 0x0a, 0x27, 0x53,
	0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53,
	0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f,
	0x45, 0x58, 0x49, 0x53, 0x54, 0x53, 0x10, 0xd2, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0x99, 0x03, 0x12,
	0x31, 0x0a, 0x26, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0xd3, 0x0f, 0x1a, 0x04, 0xa8, 0x45,
	0x91, 0x03, 0x12, 0x32, 0x0a, 0x27, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x4c, 0x4f, 0x47, 0x47, 0x45, 0x44, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0xd4, 0x0f,
	0x1a, 0x04, 0xa8, 0x45, 0x91, 0x03, 0x12, 0x2c, 0x0a, 0x21, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d,
	0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0xd5, 0x0f, 0x1a, 0x04,
	0xa8, 0x45, 0x91, 0x03, 0x12, 0x2e, 0x0a, 0x23, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x54, 0x4f, 0x4b, 0x45,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0xd6, 0x0f, 0x1a, 0x04,
	0xa8, 0x45, 0x91, 0x03, 0x12, 0x2c, 0x0a, 0x21, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x10, 0xd7, 0x0f, 0x1a, 0x04, 0xa8, 0x45,
	0x91, 0x03, 0x12, 0x2d, 0x0a, 0x22, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x43, 0x4c, 0x41, 0x49, 0x4d, 0x53, 0x10, 0xd8, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0x91,
	0x03, 0x12, 0x35, 0x0a, 0x2a, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x41, 0x55, 0x54, 0x48, 0x45, 0x4e, 0x54, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0xd9, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0x91, 0x03, 0x12, 0x34, 0x0a, 0x29, 0x53, 0x59, 0x53, 0x54,
	0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0xda, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0x93, 0x03, 0x12, 0x2e,
	0x0a, 0x23, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0xdb, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0x90, 0x03, 0x12, 0x2f,
	0x0a, 0x24, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x52,
	0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45,
	0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0xdc, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0xf4, 0x03, 0x12,
	0x2d, 0x0a, 0x22, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x52, 0x45, 0x41, 0x53, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53,
	0x45, 0x52, 0x56, 0x45, 0x52, 0x10, 0xdd, 0x0f, 0x1a, 0x04, 0xa8, 0x45, 0xf4, 0x03, 0x1a, 0x04,
	0xa0, 0x45, 0xf4, 0x03, 0x42, 0xbf, 0x01, 0x0a, 0x1a, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x42, 0x0a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50,
	0x01, 0x5a, 0x19, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x3b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0xa2, 0x02, 0x04, 0x41,
	0x56, 0x53, 0x53, 0xaa, 0x02, 0x16, 0x41, 0x70, 0x69, 0x2e, 0x56, 0x31, 0x2e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0xca, 0x02, 0x16, 0x41,
	0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0xe2, 0x02, 0x22, 0x41, 0x70, 0x69, 0x5c, 0x56, 0x31, 0x5c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x5c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5c, 0x47,
	0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x19, 0x41, 0x70, 0x69,
	0x3a, 0x3a, 0x56, 0x31, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x3a, 0x3a,
	0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_system_error_proto_rawDescOnce sync.Once
	file_system_error_proto_rawDescData = file_system_error_proto_rawDesc
)

func file_system_error_proto_rawDescGZIP() []byte {
	file_system_error_proto_rawDescOnce.Do(func() {
		file_system_error_proto_rawDescData = protoimpl.X.CompressGZIP(file_system_error_proto_rawDescData)
	})
	return file_system_error_proto_rawDescData
}

var file_system_error_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_system_error_proto_goTypes = []any{
	(SystemErrorReason)(0), // 0: api.v1.services.system.SystemErrorReason
}
var file_system_error_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_system_error_proto_init() }
func file_system_error_proto_init() {
	if File_system_error_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_system_error_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_system_error_proto_goTypes,
		DependencyIndexes: file_system_error_proto_depIdxs,
		EnumInfos:         file_system_error_proto_enumTypes,
	}.Build()
	File_system_error_proto = out.File
	file_system_error_proto_rawDesc = nil
	file_system_error_proto_goTypes = nil
	file_system_error_proto_depIdxs = nil
}
