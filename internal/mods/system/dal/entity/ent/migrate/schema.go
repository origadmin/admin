// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// SysDepartmentsColumns holds the columns for the "sys_departments" table.
	SysDepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "create_time", Type: field.TypeTime, Comment: "create_time:field:comment"},
		{Name: "update_time", Type: field.TypeTime, Comment: "update_time:field:comment"},
		{Name: "keyword", Type: field.TypeString, Size: 32, Comment: "department:field:keyword", Default: ""},
		{Name: "name", Type: field.TypeString, Size: 64, Comment: "department:field:name", Default: ""},
		{Name: "description", Type: field.TypeString, Size: 256, Comment: "department:field:description", Default: ""},
		{Name: "sequence", Type: field.TypeInt, Comment: "department:field:sequence"},
		{Name: "status", Type: field.TypeInt8, Comment: "department:field:status", Default: 0},
		{Name: "ancestors", Type: field.TypeString, Size: 1024, Comment: "department:field:ancestors", Default: ""},
		{Name: "level", Type: field.TypeInt, Comment: "department:field:level", Default: 1},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true, Comment: "department:field:parent_id"},
	}
	// SysDepartmentsTable holds the schema information for the "sys_departments" table.
	SysDepartmentsTable = &schema.Table{
		Name:       "sys_departments",
		Comment:    "department:table:comment",
		Columns:    SysDepartmentsColumns,
		PrimaryKey: []*schema.Column{SysDepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_departments_sys_departments_children",
				Columns:    []*schema.Column{SysDepartmentsColumns[10]},
				RefColumns: []*schema.Column{SysDepartmentsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "department_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentsColumns[1]},
			},
			{
				Name:    "department_update_time",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentsColumns[2]},
			},
			{
				Name:    "department_keyword",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentsColumns[3]},
			},
			{
				Name:    "department_name",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentsColumns[4]},
			},
			{
				Name:    "department_sequence",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentsColumns[6]},
			},
			{
				Name:    "department_status",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentsColumns[7]},
			},
		},
	}
	// SysDepartmentRolesColumns holds the columns for the "sys_department_roles" table.
	SysDepartmentRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "department_id", Type: field.TypeInt64, Comment: "department_role:field:department_id"},
		{Name: "role_id", Type: field.TypeInt64, Comment: "department_role:field:role_id"},
	}
	// SysDepartmentRolesTable holds the schema information for the "sys_department_roles" table.
	SysDepartmentRolesTable = &schema.Table{
		Name:       "sys_department_roles",
		Comment:    "department_role:table:comment",
		Columns:    SysDepartmentRolesColumns,
		PrimaryKey: []*schema.Column{SysDepartmentRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_department_roles_sys_departments_department",
				Columns:    []*schema.Column{SysDepartmentRolesColumns[1]},
				RefColumns: []*schema.Column{SysDepartmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_department_roles_sys_roles_role",
				Columns:    []*schema.Column{SysDepartmentRolesColumns[2]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "departmentrole_department_id",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentRolesColumns[1]},
			},
			{
				Name:    "departmentrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{SysDepartmentRolesColumns[2]},
			},
			{
				Name:    "departmentrole_department_id_role_id",
				Unique:  true,
				Columns: []*schema.Column{SysDepartmentRolesColumns[1], SysDepartmentRolesColumns[2]},
			},
		},
	}
	// SysMenusColumns holds the columns for the "sys_menus" table.
	SysMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "create_time", Type: field.TypeTime, Comment: "create_time:field:comment"},
		{Name: "update_time", Type: field.TypeTime, Comment: "update_time:field:comment"},
		{Name: "keyword", Type: field.TypeString, Size: 32, Comment: "menu:field:keyword", Default: ""},
		{Name: "name", Type: field.TypeString, Size: 128, Comment: "menu:field:name", Default: ""},
		{Name: "i18n_key", Type: field.TypeString, Size: 128, Comment: "menu:field:i18n_key", Default: ""},
		{Name: "description", Type: field.TypeString, Size: 1024, Comment: "menu:field:description", Default: ""},
		{Name: "type", Type: field.TypeString, Comment: "menu:field:type", Default: "page"},
		{Name: "icon", Type: field.TypeString, Size: 32, Comment: "menu:field:icon", Default: ""},
		{Name: "path", Type: field.TypeString, Size: 255, Comment: "menu:field:path", Default: ""},
		{Name: "status", Type: field.TypeInt8, Comment: "menu:field:status", Default: 0},
		{Name: "parent_path", Type: field.TypeString, Size: 255, Comment: "menu:field:parent_path", Default: ""},
		{Name: "sequence", Type: field.TypeInt, Comment: "menu:field:sequence", Default: 0},
		{Name: "properties", Type: field.TypeString, Nullable: true, Size: 2147483647, Comment: "menu:field:properties", Default: ""},
		{Name: "parent_id", Type: field.TypeInt64, Nullable: true, Comment: "menu:field:parent_id"},
	}
	// SysMenusTable holds the schema information for the "sys_menus" table.
	SysMenusTable = &schema.Table{
		Name:       "sys_menus",
		Comment:    "menu:table:comment",
		Columns:    SysMenusColumns,
		PrimaryKey: []*schema.Column{SysMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menus_sys_menus_children",
				Columns:    []*schema.Column{SysMenusColumns[14]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "menu_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[1]},
			},
			{
				Name:    "menu_update_time",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[2]},
			},
			{
				Name:    "menu_keyword",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[3]},
			},
			{
				Name:    "menu_name",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[4]},
			},
			{
				Name:    "menu_type",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[7]},
			},
			{
				Name:    "menu_status",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[10]},
			},
			{
				Name:    "menu_parent_id",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[14]},
			},
			{
				Name:    "menu_parent_path",
				Unique:  false,
				Columns: []*schema.Column{SysMenusColumns[11]},
			},
		},
	}
	// SysMenuPermissionsColumns holds the columns for the "sys_menu_permissions" table.
	SysMenuPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "menu_id", Type: field.TypeInt64, Comment: "menu_permission:field:menu_id"},
		{Name: "permission_id", Type: field.TypeInt64, Comment: "menu_permission:field:permission_id"},
	}
	// SysMenuPermissionsTable holds the schema information for the "sys_menu_permissions" table.
	SysMenuPermissionsTable = &schema.Table{
		Name:       "sys_menu_permissions",
		Comment:    "menu_permission:table:comment",
		Columns:    SysMenuPermissionsColumns,
		PrimaryKey: []*schema.Column{SysMenuPermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_menu_permissions_sys_menus_menu",
				Columns:    []*schema.Column{SysMenuPermissionsColumns[1]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_menu_permissions_sys_permissions_permission",
				Columns:    []*schema.Column{SysMenuPermissionsColumns[2]},
				RefColumns: []*schema.Column{SysPermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "menupermission_menu_id",
				Unique:  false,
				Columns: []*schema.Column{SysMenuPermissionsColumns[1]},
			},
			{
				Name:    "menupermission_permission_id",
				Unique:  false,
				Columns: []*schema.Column{SysMenuPermissionsColumns[2]},
			},
			{
				Name:    "menupermission_menu_id_permission_id",
				Unique:  true,
				Columns: []*schema.Column{SysMenuPermissionsColumns[1], SysMenuPermissionsColumns[2]},
			},
		},
	}
	// SysPermissionsColumns holds the columns for the "sys_permissions" table.
	SysPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "create_time", Type: field.TypeTime, Comment: "create_time:field:comment"},
		{Name: "update_time", Type: field.TypeTime, Comment: "update_time:field:comment"},
		{Name: "name", Type: field.TypeString, Size: 64, Comment: "permission:field:name"},
		{Name: "keyword", Type: field.TypeString, Unique: true, Size: 64, Comment: "permission:field:keyword"},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 256, Comment: "permission:field:description"},
		{Name: "i18n_key", Type: field.TypeString, Unique: true, Size: 128, Comment: "permission:field:i18n_key"},
		{Name: "type", Type: field.TypeInt8, Comment: "permission:field:type", Default: 2},
		{Name: "scope", Type: field.TypeString, Comment: "permission:field:scope", Default: "self"},
		{Name: "scope_depts", Type: field.TypeJSON, Nullable: true, Comment: "permission:field:scope_depts"},
	}
	// SysPermissionsTable holds the schema information for the "sys_permissions" table.
	SysPermissionsTable = &schema.Table{
		Name:       "sys_permissions",
		Comment:    "permission:table:comment",
		Columns:    SysPermissionsColumns,
		PrimaryKey: []*schema.Column{SysPermissionsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "permission_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysPermissionsColumns[1]},
			},
			{
				Name:    "permission_update_time",
				Unique:  false,
				Columns: []*schema.Column{SysPermissionsColumns[2]},
			},
		},
	}
	// SysPermissionResourcesColumns holds the columns for the "sys_permission_resources" table.
	SysPermissionResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "permission_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
		{Name: "resource_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
	}
	// SysPermissionResourcesTable holds the schema information for the "sys_permission_resources" table.
	SysPermissionResourcesTable = &schema.Table{
		Name:       "sys_permission_resources",
		Comment:    "permission_resource:table:comment",
		Columns:    SysPermissionResourcesColumns,
		PrimaryKey: []*schema.Column{SysPermissionResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_permission_resources_sys_permissions_permission",
				Columns:    []*schema.Column{SysPermissionResourcesColumns[1]},
				RefColumns: []*schema.Column{SysPermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_permission_resources_sys_resources_resource",
				Columns:    []*schema.Column{SysPermissionResourcesColumns[2]},
				RefColumns: []*schema.Column{SysResourcesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "permissionresource_permission_id",
				Unique:  false,
				Columns: []*schema.Column{SysPermissionResourcesColumns[1]},
			},
			{
				Name:    "permissionresource_resource_id",
				Unique:  false,
				Columns: []*schema.Column{SysPermissionResourcesColumns[2]},
			},
			{
				Name:    "permissionresource_permission_id_resource_id",
				Unique:  true,
				Columns: []*schema.Column{SysPermissionResourcesColumns[1], SysPermissionResourcesColumns[2]},
			},
		},
	}
	// SysPositionsColumns holds the columns for the "sys_positions" table.
	SysPositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "create_time", Type: field.TypeTime, Comment: "create_time:field:comment"},
		{Name: "update_time", Type: field.TypeTime, Comment: "update_time:field:comment"},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 64, Comment: "position:field:name"},
		{Name: "description", Type: field.TypeString, Size: 256, Comment: "position:field:description"},
		{Name: "department_id", Type: field.TypeInt64, Comment: "department:field:department_id"},
	}
	// SysPositionsTable holds the schema information for the "sys_positions" table.
	SysPositionsTable = &schema.Table{
		Name:       "sys_positions",
		Comment:    "position:table:comment",
		Columns:    SysPositionsColumns,
		PrimaryKey: []*schema.Column{SysPositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_positions_sys_departments_positions",
				Columns:    []*schema.Column{SysPositionsColumns[5]},
				RefColumns: []*schema.Column{SysDepartmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "position_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysPositionsColumns[1]},
			},
			{
				Name:    "position_update_time",
				Unique:  false,
				Columns: []*schema.Column{SysPositionsColumns[2]},
			},
		},
	}
	// SysResourcesColumns holds the columns for the "sys_resources" table.
	SysResourcesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "create_time", Type: field.TypeTime, Comment: "create_time:field:comment"},
		{Name: "update_time", Type: field.TypeTime, Comment: "update_time:field:comment"},
		{Name: "method", Type: field.TypeString, Size: 20, Comment: "resource:field:method", Default: ""},
		{Name: "operation", Type: field.TypeString, Size: 20, Comment: "resource:field:operation", Default: ""},
		{Name: "path", Type: field.TypeString, Size: 255, Comment: "resource:field:path", Default: ""},
		{Name: "menu_id", Type: field.TypeInt64, Nullable: true, Comment: "resource:field:menu_id"},
	}
	// SysResourcesTable holds the schema information for the "sys_resources" table.
	SysResourcesTable = &schema.Table{
		Name:       "sys_resources",
		Comment:    "resource:table:comment",
		Columns:    SysResourcesColumns,
		PrimaryKey: []*schema.Column{SysResourcesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_resources_sys_menus_resources",
				Columns:    []*schema.Column{SysResourcesColumns[6]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "resource_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysResourcesColumns[1]},
			},
			{
				Name:    "resource_update_time",
				Unique:  false,
				Columns: []*schema.Column{SysResourcesColumns[2]},
			},
			{
				Name:    "resource_menu_id",
				Unique:  false,
				Columns: []*schema.Column{SysResourcesColumns[6]},
			},
		},
	}
	// SysRolesColumns holds the columns for the "sys_roles" table.
	SysRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "create_time", Type: field.TypeTime, Comment: "create_time:field:comment"},
		{Name: "update_time", Type: field.TypeTime, Comment: "update_time:field:comment"},
		{Name: "keyword", Type: field.TypeString, Size: 32, Comment: "role:field:keyword", Default: ""},
		{Name: "name", Type: field.TypeString, Size: 128, Comment: "role:field:name", Default: ""},
		{Name: "description", Type: field.TypeString, Size: 1024, Comment: "role:field:description", Default: ""},
		{Name: "type", Type: field.TypeInt8, Comment: "role:field:type", Default: 2},
		{Name: "sequence", Type: field.TypeInt, Comment: "role:field:sequence", Default: 0},
		{Name: "status", Type: field.TypeInt8, Comment: "role:field:status", Default: 0},
		{Name: "is_system", Type: field.TypeBool, Comment: "role:field:is_system", Default: false},
	}
	// SysRolesTable holds the schema information for the "sys_roles" table.
	SysRolesTable = &schema.Table{
		Name:       "sys_roles",
		Comment:    "role:table:comment",
		Columns:    SysRolesColumns,
		PrimaryKey: []*schema.Column{SysRolesColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "role_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[1]},
			},
			{
				Name:    "role_update_time",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[2]},
			},
			{
				Name:    "role_keyword",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[3]},
			},
			{
				Name:    "role_name",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[4]},
			},
			{
				Name:    "role_sequence",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[7]},
			},
			{
				Name:    "role_status",
				Unique:  false,
				Columns: []*schema.Column{SysRolesColumns[8]},
			},
		},
	}
	// SysRoleMenusColumns holds the columns for the "sys_role_menus" table.
	SysRoleMenusColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "role_id", Type: field.TypeInt64, Comment: "role_menu:field:role_id"},
		{Name: "menu_id", Type: field.TypeInt64, Comment: "role_menu:field:menu_id"},
	}
	// SysRoleMenusTable holds the schema information for the "sys_role_menus" table.
	SysRoleMenusTable = &schema.Table{
		Name:       "sys_role_menus",
		Comment:    "role_menu:table:comment",
		Columns:    SysRoleMenusColumns,
		PrimaryKey: []*schema.Column{SysRoleMenusColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_role_menus_sys_roles_role",
				Columns:    []*schema.Column{SysRoleMenusColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_role_menus_sys_menus_menu",
				Columns:    []*schema.Column{SysRoleMenusColumns[2]},
				RefColumns: []*schema.Column{SysMenusColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolemenu_role_id",
				Unique:  false,
				Columns: []*schema.Column{SysRoleMenusColumns[1]},
			},
			{
				Name:    "rolemenu_menu_id",
				Unique:  false,
				Columns: []*schema.Column{SysRoleMenusColumns[2]},
			},
			{
				Name:    "rolemenu_role_id_menu_id",
				Unique:  true,
				Columns: []*schema.Column{SysRoleMenusColumns[1], SysRoleMenusColumns[2]},
			},
		},
	}
	// SysRolePermissionsColumns holds the columns for the "sys_role_permissions" table.
	SysRolePermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "role_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
		{Name: "permission_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
	}
	// SysRolePermissionsTable holds the schema information for the "sys_role_permissions" table.
	SysRolePermissionsTable = &schema.Table{
		Name:       "sys_role_permissions",
		Comment:    "role_permission:table:comment",
		Columns:    SysRolePermissionsColumns,
		PrimaryKey: []*schema.Column{SysRolePermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_role_permissions_sys_roles_role",
				Columns:    []*schema.Column{SysRolePermissionsColumns[1]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_role_permissions_sys_permissions_permission",
				Columns:    []*schema.Column{SysRolePermissionsColumns[2]},
				RefColumns: []*schema.Column{SysPermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolepermission_role_id",
				Unique:  false,
				Columns: []*schema.Column{SysRolePermissionsColumns[1]},
			},
			{
				Name:    "rolepermission_permission_id",
				Unique:  false,
				Columns: []*schema.Column{SysRolePermissionsColumns[2]},
			},
			{
				Name:    "rolepermission_role_id_permission_id",
				Unique:  true,
				Columns: []*schema.Column{SysRolePermissionsColumns[1], SysRolePermissionsColumns[2]},
			},
		},
	}
	// SysUsersColumns holds the columns for the "sys_users" table.
	SysUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "create_author", Type: field.TypeInt64, Nullable: true, Comment: "create_author:field:comment", Default: 0},
		{Name: "update_author", Type: field.TypeInt64, Nullable: true, Comment: "update_author:field:comment", Default: 0},
		{Name: "create_time", Type: field.TypeTime, Comment: "create_time:field:comment"},
		{Name: "update_time", Type: field.TypeTime, Comment: "update_time:field:comment"},
		{Name: "uuid", Type: field.TypeString, Size: 36, Comment: "user:field:uuid"},
		{Name: "allowed_ip", Type: field.TypeString, Comment: "user:field:allowed_ip", Default: "0.0.0.0"},
		{Name: "username", Type: field.TypeString, Size: 32, Comment: "user:field:username", Default: ""},
		{Name: "nickname", Type: field.TypeString, Size: 64, Comment: "user:field:nickname", Default: ""},
		{Name: "avatar", Type: field.TypeString, Size: 256, Comment: "user:field:avatar", Default: ""},
		{Name: "name", Type: field.TypeString, Size: 64, Comment: "user:field:nickname", Default: ""},
		{Name: "gender", Type: field.TypeString, Size: 16, Comment: "user:field:gender", Default: ""},
		{Name: "password", Type: field.TypeString, Size: 256, Comment: "user:field:password", Default: ""},
		{Name: "salt", Type: field.TypeString, Size: 64, Comment: "user:field:salt", Default: ""},
		{Name: "phone", Type: field.TypeString, Size: 32, Comment: "user:field:phone", Default: ""},
		{Name: "email", Type: field.TypeString, Size: 64, Comment: "user:field:email", Default: ""},
		{Name: "remark", Type: field.TypeString, Size: 1024, Comment: "user:field:remark", Default: ""},
		{Name: "token", Type: field.TypeString, Size: 512, Comment: "user:field:token", Default: ""},
		{Name: "status", Type: field.TypeInt8, Comment: "user:field:status", Default: 0},
		{Name: "last_login_ip", Type: field.TypeString, Size: 32, Comment: "user:field:last_login_ip", Default: ""},
		{Name: "last_login_time", Type: field.TypeTime, Comment: "user:field:last_login_time", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "sanction_date", Type: field.TypeTime, Comment: "user:field:sanction_date", SchemaType: map[string]string{"mysql": "datetime"}},
		{Name: "manager_id", Type: field.TypeInt64, Comment: "user:field:manager_id"},
		{Name: "manager", Type: field.TypeString, Comment: "user:field:manager", Default: ""},
	}
	// SysUsersTable holds the schema information for the "sys_users" table.
	SysUsersTable = &schema.Table{
		Name:       "sys_users",
		Comment:    "user:table:comment",
		Columns:    SysUsersColumns,
		PrimaryKey: []*schema.Column{SysUsersColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "user_create_author",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[1]},
			},
			{
				Name:    "user_update_author",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[2]},
			},
			{
				Name:    "user_create_time",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[3]},
			},
			{
				Name:    "user_update_time",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[4]},
			},
			{
				Name:    "user_username",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[7]},
			},
			{
				Name:    "user_phone",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[14]},
			},
			{
				Name:    "user_email",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[15]},
			},
			{
				Name:    "user_status",
				Unique:  false,
				Columns: []*schema.Column{SysUsersColumns[18]},
			},
		},
	}
	// SysUserDepartmentsColumns holds the columns for the "sys_user_departments" table.
	SysUserDepartmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "user_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
		{Name: "department_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
	}
	// SysUserDepartmentsTable holds the schema information for the "sys_user_departments" table.
	SysUserDepartmentsTable = &schema.Table{
		Name:       "sys_user_departments",
		Comment:    "user_department:table:comment",
		Columns:    SysUserDepartmentsColumns,
		PrimaryKey: []*schema.Column{SysUserDepartmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_user_departments_sys_users_user",
				Columns:    []*schema.Column{SysUserDepartmentsColumns[1]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_user_departments_sys_departments_department",
				Columns:    []*schema.Column{SysUserDepartmentsColumns[2]},
				RefColumns: []*schema.Column{SysDepartmentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userdepartment_user_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserDepartmentsColumns[1]},
			},
			{
				Name:    "userdepartment_department_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserDepartmentsColumns[2]},
			},
			{
				Name:    "userdepartment_user_id_department_id",
				Unique:  true,
				Columns: []*schema.Column{SysUserDepartmentsColumns[1], SysUserDepartmentsColumns[2]},
			},
		},
	}
	// SysUserPositionsColumns holds the columns for the "sys_user_positions" table.
	SysUserPositionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "position_user_positions", Type: field.TypeInt64, Nullable: true},
		{Name: "user_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
		{Name: "position_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
	}
	// SysUserPositionsTable holds the schema information for the "sys_user_positions" table.
	SysUserPositionsTable = &schema.Table{
		Name:       "sys_user_positions",
		Comment:    "user_position:table:comment",
		Columns:    SysUserPositionsColumns,
		PrimaryKey: []*schema.Column{SysUserPositionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_user_positions_sys_positions_user_positions",
				Columns:    []*schema.Column{SysUserPositionsColumns[1]},
				RefColumns: []*schema.Column{SysPositionsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sys_user_positions_sys_users_user",
				Columns:    []*schema.Column{SysUserPositionsColumns[2]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_user_positions_sys_positions_position",
				Columns:    []*schema.Column{SysUserPositionsColumns[3]},
				RefColumns: []*schema.Column{SysPositionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userposition_user_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserPositionsColumns[2]},
			},
			{
				Name:    "userposition_position_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserPositionsColumns[3]},
			},
			{
				Name:    "userposition_user_id_position_id",
				Unique:  true,
				Columns: []*schema.Column{SysUserPositionsColumns[2], SysUserPositionsColumns[3]},
			},
		},
	}
	// SysUserRolesColumns holds the columns for the "sys_user_roles" table.
	SysUserRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true, Comment: "field:primary_key:comment"},
		{Name: "user_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
		{Name: "role_id", Type: field.TypeInt64, Comment: "field:foreign_key:comment"},
	}
	// SysUserRolesTable holds the schema information for the "sys_user_roles" table.
	SysUserRolesTable = &schema.Table{
		Name:       "sys_user_roles",
		Comment:    "user_role:table:comment",
		Columns:    SysUserRolesColumns,
		PrimaryKey: []*schema.Column{SysUserRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sys_user_roles_sys_users_user",
				Columns:    []*schema.Column{SysUserRolesColumns[1]},
				RefColumns: []*schema.Column{SysUsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "sys_user_roles_sys_roles_role",
				Columns:    []*schema.Column{SysUserRolesColumns[2]},
				RefColumns: []*schema.Column{SysRolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_user_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserRolesColumns[1]},
			},
			{
				Name:    "userrole_role_id",
				Unique:  false,
				Columns: []*schema.Column{SysUserRolesColumns[2]},
			},
			{
				Name:    "userrole_user_id_role_id",
				Unique:  true,
				Columns: []*schema.Column{SysUserRolesColumns[1], SysUserRolesColumns[2]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		SysDepartmentsTable,
		SysDepartmentRolesTable,
		SysMenusTable,
		SysMenuPermissionsTable,
		SysPermissionsTable,
		SysPermissionResourcesTable,
		SysPositionsTable,
		SysResourcesTable,
		SysRolesTable,
		SysRoleMenusTable,
		SysRolePermissionsTable,
		SysUsersTable,
		SysUserDepartmentsTable,
		SysUserPositionsTable,
		SysUserRolesTable,
	}
)

func init() {
	SysDepartmentsTable.ForeignKeys[0].RefTable = SysDepartmentsTable
	SysDepartmentsTable.Annotation = &entsql.Annotation{
		Table: "sys_departments",
	}
	SysDepartmentRolesTable.ForeignKeys[0].RefTable = SysDepartmentsTable
	SysDepartmentRolesTable.ForeignKeys[1].RefTable = SysRolesTable
	SysDepartmentRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_department_roles",
	}
	SysMenusTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenusTable.Annotation = &entsql.Annotation{
		Table: "sys_menus",
	}
	SysMenuPermissionsTable.ForeignKeys[0].RefTable = SysMenusTable
	SysMenuPermissionsTable.ForeignKeys[1].RefTable = SysPermissionsTable
	SysMenuPermissionsTable.Annotation = &entsql.Annotation{
		Table: "sys_menu_permissions",
	}
	SysPermissionsTable.Annotation = &entsql.Annotation{
		Table: "sys_permissions",
	}
	SysPermissionResourcesTable.ForeignKeys[0].RefTable = SysPermissionsTable
	SysPermissionResourcesTable.ForeignKeys[1].RefTable = SysResourcesTable
	SysPermissionResourcesTable.Annotation = &entsql.Annotation{
		Table: "sys_permission_resources",
	}
	SysPositionsTable.ForeignKeys[0].RefTable = SysDepartmentsTable
	SysPositionsTable.Annotation = &entsql.Annotation{
		Table: "sys_positions",
	}
	SysResourcesTable.ForeignKeys[0].RefTable = SysMenusTable
	SysResourcesTable.Annotation = &entsql.Annotation{
		Table: "sys_resources",
	}
	SysRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_roles",
	}
	SysRoleMenusTable.ForeignKeys[0].RefTable = SysRolesTable
	SysRoleMenusTable.ForeignKeys[1].RefTable = SysMenusTable
	SysRoleMenusTable.Annotation = &entsql.Annotation{
		Table: "sys_role_menus",
	}
	SysRolePermissionsTable.ForeignKeys[0].RefTable = SysRolesTable
	SysRolePermissionsTable.ForeignKeys[1].RefTable = SysPermissionsTable
	SysRolePermissionsTable.Annotation = &entsql.Annotation{
		Table: "sys_role_permissions",
	}
	SysUsersTable.Annotation = &entsql.Annotation{
		Table: "sys_users",
	}
	SysUserDepartmentsTable.ForeignKeys[0].RefTable = SysUsersTable
	SysUserDepartmentsTable.ForeignKeys[1].RefTable = SysDepartmentsTable
	SysUserDepartmentsTable.Annotation = &entsql.Annotation{
		Table: "sys_user_departments",
	}
	SysUserPositionsTable.ForeignKeys[0].RefTable = SysPositionsTable
	SysUserPositionsTable.ForeignKeys[1].RefTable = SysUsersTable
	SysUserPositionsTable.ForeignKeys[2].RefTable = SysPositionsTable
	SysUserPositionsTable.Annotation = &entsql.Annotation{
		Table: "sys_user_positions",
	}
	SysUserRolesTable.ForeignKeys[0].RefTable = SysUsersTable
	SysUserRolesTable.ForeignKeys[1].RefTable = SysRolesTable
	SysUserRolesTable.Annotation = &entsql.Annotation{
		Table: "sys_user_roles",
	}
}
